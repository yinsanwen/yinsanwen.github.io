<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sanween's Blog]]></title>
  <link href="http://yinsanwen.github.io/atom.xml" rel="self"/>
  <link href="http://yinsanwen.github.io/"/>
  <updated>2013-11-10T11:29:06+08:00</updated>
  <id>http://yinsanwen.github.io/</id>
  <author>
    <name><![CDATA[sanween]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[pl/sql conllections]]></title>
    <link href="http://yinsanwen.github.io/blog/2013/11/10/pl-slash-sql-conllections/"/>
    <updated>2013-11-10T10:20:00+08:00</updated>
    <id>http://yinsanwen.github.io/blog/2013/11/10/pl-slash-sql-conllections</id>
    <content type="html"><![CDATA[<h1>PL/SQL 中的集合类型</h1>

<p>PL/SQL 中有三种集合类型：<code>Varrays</code>, <code>Nested tables</code>, <code>Associative arrays</code>.</p>

<ul>
<li>Varrays: 拥有固定的长度（虽说在运行时中可以改变），使用连续的数字作为下标。<em>类似Java语言中的数组，定长。</em></li>
<li>Nested tables: 可以拥有任意数量的元素，使用连续的数字作为下标。<em>类似Java语言中的List类型。</em></li>
<li>Associative arrays，又叫做<code>Index-by tables</code>。可以使用任意的数字或者字符串作为下标。<em>类似Java语言中的Map数据结构</em></li>
</ul>


<!-- more -->


<p>Associative arrays<strong>默认按索引的字母顺序排序</strong>(alphabetically)。</p>

<figure class='code'><figcaption><span>title:字符串索引默认用字母顺序排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DECLARE</span>  <span class="k">TYPE</span> <span class="n">population_type</span> <span class="k">IS</span> <span class="k">TABLE</span> <span class="k">OF</span> <span class="nb">NUMBER</span> <span class="k">INDEX</span> <span class="k">BY</span> <span class="n">VARCHAR2</span><span class="p">(</span><span class="mi">64</span><span class="p">);</span>
</span><span class='line'>  <span class="n">country_population</span> <span class="n">population_type</span><span class="p">;</span>
</span><span class='line'>  <span class="n">continent_population</span> <span class="n">population_type</span><span class="p">;</span>
</span><span class='line'>  <span class="n">howmany</span> <span class="nb">NUMBER</span><span class="p">;</span>
</span><span class='line'>  <span class="n">which</span> <span class="n">VARCHAR2</span><span class="p">(</span><span class="mi">64</span><span class="p">);</span>
</span><span class='line'><span class="k">BEGIN</span>
</span><span class='line'>  <span class="n">country_population</span><span class="p">(</span><span class="s1">&#39;Greenland&#39;</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">100000</span><span class="p">;</span> <span class="c1">-- Creates new entry</span>
</span><span class='line'>  <span class="n">country_population</span><span class="p">(</span><span class="s1">&#39;Iceland&#39;</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">750000</span><span class="p">;</span>   <span class="c1">-- Creates new entry</span>
</span><span class='line'><span class="c1">-- Looks up value associated with a string</span>
</span><span class='line'>  <span class="n">howmany</span> <span class="p">:</span><span class="o">=</span> <span class="n">country_population</span><span class="p">(</span><span class="s1">&#39;Greenland&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">continent_population</span><span class="p">(</span><span class="s1">&#39;Australia&#39;</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">30000000</span><span class="p">;</span>
</span><span class='line'>  <span class="n">continent_population</span><span class="p">(</span><span class="s1">&#39;Antarctica&#39;</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">-- Creates new entry</span>
</span><span class='line'>  <span class="n">continent_population</span><span class="p">(</span><span class="s1">&#39;Antarctica&#39;</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">1001</span><span class="p">;</span> <span class="c1">-- Replaces previous value </span>
</span><span class='line'><span class="c1">-- Returns &#39;Antarctica&#39; as that comes first alphabetically.</span>
</span><span class='line'>  <span class="n">which</span> <span class="p">:</span><span class="o">=</span> <span class="n">continent_population</span><span class="p">.</span><span class="k">FIRST</span><span class="p">;</span>
</span><span class='line'><span class="c1">-- Returns &#39;Australia&#39; as that comes last alphabetically.  which := continent_population.LAST;</span>
</span><span class='line'><span class="c1">-- Returns the value corresponding to the last key, in this</span>
</span><span class='line'><span class="c1">-- case the population of Australia.</span>
</span><span class='line'>  <span class="n">howmany</span> <span class="p">:</span><span class="o">=</span> <span class="n">continent_population</span><span class="p">(</span><span class="n">continent_population</span><span class="p">.</span><span class="k">LAST</span><span class="p">);</span>
</span><span class='line'><span class="k">END</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>title:数字索引默认数字大小排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DECLARE</span>
</span><span class='line'>  <span class="k">TYPE</span> <span class="n">number_index_table</span> <span class="k">IS</span> <span class="k">TABLE</span> <span class="k">OF</span> <span class="nb">NUMBER</span> <span class="k">INDEX</span> <span class="k">BY</span> <span class="n">PLS_INTEGER</span><span class="p">;</span>
</span><span class='line'>  <span class="n">num_tab</span> <span class="n">number_index_table</span> <span class="p">;</span>
</span><span class='line'>  <span class="n">which</span> <span class="nb">integer</span><span class="p">;</span>
</span><span class='line'><span class="k">BEGIN</span>
</span><span class='line'>  <span class="n">num_tab</span><span class="p">(</span><span class="mi">111</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span><span class='line'>  <span class="n">num_tab</span><span class="p">(</span><span class="mi">222</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span><span class='line'>  <span class="n">num_tab</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span><span class='line'>  <span class="n">num_tab</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span><span class='line'>  <span class="n">num_tab</span><span class="p">(</span><span class="mi">333</span><span class="p">)</span> <span class="p">:</span><span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--loop num_tab</span>
</span><span class='line'>  <span class="n">which</span> <span class="p">:</span><span class="o">=</span> <span class="n">num_tab</span><span class="p">.</span><span class="k">FIRST</span><span class="p">;</span>
</span><span class='line'>  <span class="n">while</span> <span class="n">which</span> <span class="k">is</span> <span class="k">not</span> <span class="k">null</span>
</span><span class='line'>  <span class="n">loop</span>
</span><span class='line'>     <span class="n">DBMS_OUTPUT</span><span class="p">.</span><span class="n">PUT_LINE</span><span class="p">(</span><span class="n">which</span><span class="o">||</span><span class="s1">&#39;-&gt;&#39;</span><span class="o">||</span><span class="n">num_tab</span><span class="p">(</span><span class="n">which</span><span class="p">));</span>
</span><span class='line'>     <span class="n">which</span> <span class="p">:</span><span class="o">=</span> <span class="n">num_tab</span><span class="p">.</span><span class="k">NEXT</span><span class="p">(</span><span class="n">which</span><span class="p">);</span>
</span><span class='line'>  <span class="k">end</span> <span class="n">loop</span><span class="p">;</span>
</span><span class='line'><span class="k">END</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>11-&gt;111
</span><span class='line'>22-&gt;111
</span><span class='line'>111-&gt;111
</span><span class='line'>222-&gt;111
</span><span class='line'>333-&gt;111
</span></code></pre></td></tr></table></div></figure>


<h2>Collection的方法</h2>

<p>前面使用了<code>First</code>,<code>Last</code>,<code>Next</code>等集合的方法。集合的方法一共包括</p>

<blockquote><p>COUNT, DELETE, EXISTS, EXTEND, FIRST, LAST, LIMIT, NEXT, PRIOR, and TRIM.</p></blockquote>

<h3>需要注意的是:</h3>

<ul>
<li>集合的方法不能用在SQL语句中</li>
<li>EXTEND 和 TRIM 不能用于Associative arrays</li>
<li>EXISTS, COUNT, LIMIT, FIRST, LAST, PRIOR, 和 NEXT是函数；而EXTEND, TRIM, DELETE 是存储过程</li>
<li>EXISTS, PRIOR, NEXT, TRIM, EXTEND, DELETE 带有表示下标的参数。 一般情况下下标都是数字，在Associative arrays中可以使字符串</li>
</ul>


<h3>下面对这些方法或是过程做些说明</h3>

<ul>
<li><strong>EXISTS(n)</strong> : returns TRUE if the nth element in a collection exists.</li>
<li><strong>COUNT</strong> : returns the number of elements that a collection currently contains.</li>
<li><strong>LIMIT</strong> : 返回集合的最大容量。对于nested table 和associative arrays，没有固定的容量大小，返回NULL。对于Varrays，返回其容量大小。</li>
<li><strong>FIRST</strong> : 返回集合的第一个（最小的）索引（下标），<br/>
<strong>LAST</strong> : 返回最后一个（最大的)索引（下标）。</li>
<li><strong>PRIOR(n)</strong> : 返回索引n的前一个索引，  如果n是第一个索引，返回null；<br/>
<strong>NEXT(n)</strong> : 返回索引n的下一个索引，如果n是最后一个索引，返回null。</li>
<li><strong>EXTEND</strong> : 增加集合的长度，对varray和nested array使用。有三种形式

<ul>
<li>EXTEND 在集合末尾增加一个Null元素</li>
<li>EXTEND(n) 在集合末尾增加n个Null元素</li>
<li>EXTEND(n,i) 将集合的第i个元素的值复制n份到集合的末尾。<br/>
不能对index-by tables 使用extend。不能对未初始化的集合使用extend。</li>
</ul>
</li>
<li><strong>TRIM</strong> : 减少集合的容量，有两种形式

<ul>
<li>TRIM 除去集合末尾的最后一个元素</li>
<li>TRIM(n) 除去集合末尾的n个元素。<br/>
如果想删除所有的元素，使用不带参数的DELETE</li>
</ul>
</li>
<li><strong>DELETE</strong> : 删除集合中的元素，有三种形式

<ul>
<li>DELETE 不带参数，删除集合中所有元素</li>
<li>DELETE(n) 删除下标为n的元素</li>
<li>DELETE(m,n) 删除所有下标在m&hellip;n之间的元素</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java中默认参数的实现——使用方法的重载]]></title>
    <link href="http://yinsanwen.github.io/blog/2013/10/26/java-method-default-param/"/>
    <updated>2013-10-26T17:00:00+08:00</updated>
    <id>http://yinsanwen.github.io/blog/2013/10/26/java-method-default-param</id>
    <content type="html"><![CDATA[<h3>Java不支持为方法设置默认的参数</h3>

<p>例如，我想定义一个获取用户最近一段时间内用户行为的方法，定义如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 获取所有用户最近一段时间内对itemID的浏览记录</span>
</span><span class='line'><span class="cm"> * @param itemID </span>
</span><span class='line'><span class="cm"> * @param limit 限定值</span>
</span><span class='line'><span class="cm"> * @param unit   限定单位为&quot;MONTH&quot;,&quot;DAY&quot;,默认为MONTH</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">long</span><span class="o">[]</span> <span class="nf">browseHistory</span><span class="o">(</span><span class="kt">long</span> <span class="n">itemID</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">,</span> <span class="n">String</span> <span class="n">unit</span> <span class="o">=</span> <span class="err">&#39;</span><span class="n">MONTH</span><span class="err">&#39;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Eclipse会报错，不支持为unit设置默认值“MONTH”。
可以使用方法的重载机制。如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 方法的重载，定义一个只有两个参数的browseHistory方法，再设置默认值调用目标方法。</span>
</span><span class='line'><span class="cm"> * @param itemID</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">long</span><span class="o">[]</span> <span class="nf">browseHistory</span><span class="o">(</span><span class="kt">long</span> <span class="n">itemID</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nf">browseHistorty</span><span class="o">(</span><span class="n">itemID</span><span class="o">,</span> <span class="n">limit</span><span class="o">,</span> <span class="err">&#39;</span><span class="n">MONTH</span><span class="err">&#39;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 获取所有用户最近一段时间内对itemID的浏览记录</span>
</span><span class='line'><span class="cm"> * @param itemID </span>
</span><span class='line'><span class="cm"> * @param limit 限定值</span>
</span><span class='line'><span class="cm"> * @param unit   限定单位为&quot;MONTH&quot;,&quot;DAY&quot;,默认为MONTH</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">long</span><span class="o">[]</span> <span class="nf">browseHistory</span><span class="o">(</span><span class="kt">long</span> <span class="n">itemID</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">,</span> <span class="n">String</span> <span class="n">unit</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[new start]]></title>
    <link href="http://yinsanwen.github.io/blog/2013/10/14/new-start/"/>
    <updated>2013-10-14T22:25:00+08:00</updated>
    <id>http://yinsanwen.github.io/blog/2013/10/14/new-start</id>
    <content type="html"><![CDATA[<p>This is my new blog!
Hello to see you all.</p>
]]></content>
  </entry>
  
</feed>
